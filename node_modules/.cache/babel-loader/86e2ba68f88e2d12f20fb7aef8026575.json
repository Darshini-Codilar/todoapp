{"ast":null,"code":"var _jsxFileName = \"/home/darshini/Desktop/ReactJS/todoapp/src/todo/Todoform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport cross from \"./icon-cross.svg\";\nimport \"./todoform.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todoform(_ref) {\n  _s();\n\n  let {\n    themeChange\n  } = _ref;\n  const [data, setDataItem] = useState([]);\n  const [value, setValue] = useState();\n  const [currentState, setTabState] = useState(\"\");\n  var itemsLeft = 0;\n\n  const setData = event => {\n    setValue(event.target.value);\n  };\n\n  const add = e => {\n    e.preventDefault();\n\n    if (value !== \"\") {\n      setDataItem([...data, {\n        text: value,\n        completed: false,\n        id: new Date().getTime()\n      }]);\n    }\n\n    setValue(value);\n  };\n\n  useEffect(() => {\n    const todos = JSON.parse(localStorage.getItem(\"key\"));\n\n    if (todos) {\n      setDataItem(todos);\n    }\n  }, []); //storing data to localstorage\n\n  useEffect(() => {\n    localStorage.setItem(\"key\", JSON.stringify(data));\n  }, [data]); // for toggling\n\n  const toggleId = id => {\n    const newid = data.map(data => data.id === id ? { ...data,\n      completed: !data.completed\n    } : data);\n    setDataItem(newid);\n  }; // deleting \n\n\n  const clearComplete = () => {\n    const updatedTodos = data.filter(val => {\n      if (val.completed == false) {\n        return val;\n      }\n    });\n    setDataItem(updatedTodos);\n  };\n\n  const removeItem = id => {\n    const updatedTodo = data.filter(val => {\n      if (val.id !== id) {\n        return val;\n      }\n    });\n    setDataItem(updatedTodo);\n  };\n\n  const activeTab = e => {\n    setTabState(e.target.textContent);\n  };\n\n  const leftItems = () => {\n    const updatedTodos = data.filter(data => !data.completed);\n    itemsLeft = updatedTodos.length;\n    return updatedTodos.length;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo_form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo_title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"icon-moon.svg\",\n            alt: \"\",\n            id: \"moonimage\",\n            onClick: themeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_field\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: add,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Create a new todo...\",\n            onChange: setData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result_main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: data.map((val, i) => {\n            if (currentState === \"All\" || currentState === \"\") {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: \"checkbox\",\n                  checked: val.completed,\n                  onClick: () => toggleId(val.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this), val.text, /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: cross,\n                  alt: \"\",\n                  className: \"cross\",\n                  onClick: () => removeItem(val.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this);\n            } else if (currentState === \"Active\") {\n              if (!val.completed) {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    className: \"checkbox\",\n                    checked: val.completed,\n                    onClick: () => toggleId(val.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 23\n                  }, this), val.text, /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: cross,\n                    alt: \"\",\n                    className: \"cross\",\n                    onClick: () => removeItem(val.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 23\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this);\n              }\n            } else if (currentState === \"Completed\") {\n              if (val.completed) {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    className: \"checkbox\",\n                    checked: val.completed,\n                    onClick: () => toggleId(val.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 23\n                  }, this), val.text, /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: cross,\n                    alt: \"\",\n                    className: \"cross\",\n                    onClick: () => removeItem(val.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this);\n              }\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [leftItems(), \" items\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clickfunction\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: activeTab,\n              id: currentState === \"All\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: activeTab,\n              id: currentState === \"Active\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: activeTab,\n              id: currentState === \"Completed\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: clearComplete,\n              children: \"Clear Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todoform, \"SswdBVrsW+hFGs854+HazhIyBXA=\");\n\n_c = Todoform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todoform\");","map":{"version":3,"sources":["/home/darshini/Desktop/ReactJS/todoapp/src/todo/Todoform.js"],"names":["React","useState","useEffect","cross","Todoform","themeChange","data","setDataItem","value","setValue","currentState","setTabState","itemsLeft","setData","event","target","add","e","preventDefault","text","completed","id","Date","getTime","todos","JSON","parse","localStorage","getItem","setItem","stringify","toggleId","newid","map","clearComplete","updatedTodos","filter","val","removeItem","updatedTodo","activeTab","textContent","leftItems","length","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport cross from \"./icon-cross.svg\";\nimport \"./todoform.css\";\n\nexport default function Todoform ({themeChange}) {\n\n\n  const [data, setDataItem] = useState([]);\n  const [value, setValue] = useState();\n  const [currentState, setTabState] = useState(\"\");\n  var itemsLeft = 0;\n  const setData = (event) => {\n    setValue(event.target.value);\n  };\n\n\n  const add = (e) => {\n    e.preventDefault();\n    if(value!==\"\"){\n    setDataItem([\n      ...data,\n      { text: value, completed: false, id: new Date().getTime() },\n    ])\n    }\n    setValue(value);\n  };\n\n  useEffect(() => {\n    const todos = JSON.parse(localStorage.getItem(\"key\"));\n    if (todos) {\n      setDataItem(todos);\n    }\n  }, []);\n\n  //storing data to localstorage\n  useEffect(() => {\n    localStorage.setItem(\"key\", JSON.stringify(data));\n  }, [data]);\n\n  // for toggling\n  const toggleId = (id) => {\n    const newid = data.map((data) =>\n      data.id === id ? { ...data, completed: !data.completed } : data\n    );\n    \n    setDataItem(newid);\n  };\n\n  // deleting \n  const clearComplete = () => {\n    const updatedTodos = data.filter((val) => {\n      if (val.completed == false) {\n        return val;\n      }\n    });\n    setDataItem(updatedTodos);\n  };\n \n   const removeItem = (id) => {\n    const updatedTodo = data.filter((val) => {\n      if (val.id !== id) {\n        return val;\n      }\n    });\n   setDataItem(updatedTodo);\n  };\n\n\n  const activeTab = (e) => {\n    setTabState(e.target.textContent);\n  };\n\n  const leftItems = () => {\n    const updatedTodos = data.filter((data) => !data.completed);\n    itemsLeft = updatedTodos.length;\n    return updatedTodos.length;\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"todo_form\">\n        <div className=\"todo_title\">\n          <span>todo</span>\n          <span>\n            <img src=\"icon-moon.svg\" alt=\"\" id=\"moonimage\" onClick={themeChange}/>\n          </span>\n        </div>\n        <div className=\"input_field\">\n          <form onSubmit={add}>\n            <input\n              type=\"text\"\n              placeholder=\"Create a new todo...\"\n              onChange={setData}\n            />\n          </form>\n        </div>\n      </div>\n      <div className=\"result_main\">\n        <div className=\"results\">\n          <ul className=\"list\">\n            {data.map((val, i) => {\n              if (currentState === \"All\" || currentState===\"\") {\n                return (\n                  <li key={i}>\n                    <input\n                      type=\"checkbox\"\n                      className=\"checkbox\"\n                      checked={val.completed}\n                      onClick={() => toggleId(val.id)}\n                    />\n                    {val.text}\n                    <img\n                      src={cross}\n                      alt=\"\"\n                      className=\"cross\"\n                      onClick={() => removeItem(val.id)}\n                    />\n                  </li>\n                );\n              } else if (currentState === \"Active\") {\n                if (!val.completed) {\n                  return (\n                    <li key={i}>\n                      <input\n                        type=\"checkbox\"\n                        className=\"checkbox\"\n                        checked={val.completed}\n                        onClick={() => toggleId(val.id)}\n                      />\n                      {val.text}\n                      <img\n                        src={cross}\n                        alt=\"\"\n                        className=\"cross\"\n                        onClick={() => removeItem(val.id)}\n                      />\n                    </li>\n                  );\n                }\n              } else if (currentState === \"Completed\") {\n                if (val.completed) {\n                  return (\n                    <li key={i}>\n                      <input\n                        type=\"checkbox\"\n                        className=\"checkbox\"\n                        checked={val.completed}\n                        onClick={() => toggleId(val.id)}\n                      />\n                      {val.text}\n                      <img\n                        src={cross}\n                        alt=\"\"\n                        className=\"cross\"\n                        onClick={() => removeItem(val.id)}\n                      />\n                    </li>\n                  );\n                }\n              }\n            })}\n          </ul>\n\n          <div className=\"button\">\n            <div>{leftItems()} items</div>\n            <div className=\"clickfunction\">\n              <div onClick={activeTab} id={currentState === \"All\"}>\n                All\n              </div>\n              <div onClick={activeTab} id={currentState === \"Active\"}>\n                Active\n              </div>\n              <div onClick={activeTab} id={currentState === \"Completed\"}>\n                Completed\n              </div>\n              <div onClick={clearComplete}>Clear Completed</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}